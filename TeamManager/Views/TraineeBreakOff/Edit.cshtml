@model TeamManager.DataProvider.TraineeBreakOff

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "BreakOff", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-inline", id = "tbfInfo_edit", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Edit OverTime</legend>

        <div class="editor-field">
            @Html.HiddenFor(model => model.BreakOffGuid)
            @Html.ValidationMessageFor(model => model.BreakOffGuid)
        </div>

        <div class="editor-field">
            @Html.HiddenFor(model => model.UserID)
            @Html.ValidationMessageFor(model => model.UserID)
        </div>

        <div class="form-group">
            <label class="text-info">DateFrom</label>
            <br />
           @* @Html.EditorFor(model => model.BreakOffFrom)*@
           @Html.TextBoxFor(model => model.BreakOffFrom, new {@Value = String.Format("{0:d}", Model.BreakOffFrom.ToString("MM'/'dd'/'yyyy HH:mm"))})
            <br />
            @Html.ValidationMessageFor(model => model.BreakOffFrom)
        </div>
        <p></p>
        <div class="form-group">
            <label class="text-info">DateTo</label>
            <br />
            @*@Html.EditorFor(model => model.BreakOffTo)*@
            @Html.TextBoxFor(model => model.BreakOffTo, new {@Value = String.Format("{0:d}", Model.BreakOffTo.ToString("MM'/'dd'/'yyyy HH:mm"))})
            <br />
            @Html.ValidationMessageFor(model => model.BreakOffTo)
        </div>
        <p></p>

        <div class="editor-field">
            @Html.HiddenFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <br />
        <button id="Save_edit" class="btn btn-primary" type="submit">Save</button>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    </fieldset>
}
@Scripts.Render("~/bundles/TraineeBreakOff")