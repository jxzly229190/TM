@model IPagedList<TeamManager.Models.BreakOffTable>
@*@model TeamManager.DataProvider.BreakOff*@
@{
    ViewBag.Title = "Break Off";
}
<link href="~/Content/bootstrap/css/pager.css" rel="stylesheet" />
<script type="text/javascript">
 $(function() {
    $('b').tooltip()
 })
 </script>

<div id="bf">
    <fieldset>
        <legend>BreakOff Application<b style="margin-left: 25px;" data-toggle="tooltip" title="AnnualDay"><span style="color:#f00">@ViewBag.AnnualDaysRest</span> / <span style="color:#05a903;">@ViewBag.AnnualDays</span></b>
            <b style="margin-left: 25px;" data-toggle="tooltip" title="OverTime"><span style="color:#f00">@ViewBag.OverTimeRest</span> / <span style="color:#05a903;">@ViewBag.OverTime</span></b></legend>
        <p>
            <a id="Create" class="btn btn-primary btn-default" data-toggle="modal"  href="#CreateDialog">Create New</a>                    
        </p>
        <div class="modal fade" id="CreateDialog" tabindex="-1" role="dialog" aria-labelledby="CreateDialogLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h3 class="modal-title" id="CreateDialogLabel">Create New BreakOff</h3>
                    </div>
                    <div class="modal-body">

                        @using (Html.BeginForm("Create", "BreakOff", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-inline", id = "bfInfo", role = "form" }))
                        {
                            if (ViewData["List"] != null)
                            {
                             <div class="form-group">
                                <label class="text-info">DateFrom</label>
                                <br />                  
                                <input type="text" id="BreakOffFrom" name="BreakOffFrom"/>
                            </div>
                            <p></p>
                            <div class="form-group">
                                <label class="text-info">DateTo</label>
                                <br />
                                <input type="text" id="BreakOffTo" name="BreakOffTo" />
                            </div>
                            <p></p>
                            <div class="form-group">
                                <label class="text-info">CutFrom</label>
                                <br />                               
                                    @Html.DropDownList("CutFrom", (IEnumerable<SelectListItem>)ViewData["List"])
                            </div>
                            }else
                            {
                               <p><em><b>I'm sorry that you have no time to leave.</b></em></p> 
                            }
                        }
                    </div>
                    <div class="modal-footer">
                        @if (ViewData["List"] != null)
                        {
                            <button id="Save" type="submit" class="btn btn-primary">Save</button>
                        }
                        <button id="Close" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <div id="breakOff" class="table-responsive">
            <table id="BreakOff" class="table table-striped table-hover">
                @*<caption style="font-size:25px;margin-bottom:20px;"><b>The OverTime History</b></caption>*@
                <thead>
                    <tr>
                        <th>DateFrom</th>
                        <th>DateTo</th>
                        <th>Time</th>
                        <th>CutFrom</th>
                        <th>Status</th>
                        <th>Manage</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @string.Format("{0:yyyy/MM/dd HH:mm:ss}", item.breakoff.BreakOffFrom)
                                @*@Html.DisplayFor(modelItem => item.breakoff.BreakOffFrom)*@
                            </td>
                            <td>
                                @string.Format("{0:yyyy/MM/dd HH:mm:ss}", item.breakoff.BreakOffTo)
                                @*@Html.DisplayFor(modelItem => item.breakoff.BreakOffTo)*@
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.time)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.breakoff.CutFrom)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.breakoff.Status)
                            </td>
                            <td>
                                @if (item.breakoff.Status == "Ask")
                                {                                   
                                    @Html.ActionLink("Edit", "Edit", new { id = item.breakoff.BreakOffGuid }, new { @class = "btn btn-success btn-sm", role = "button" })   
                                    @Html.ActionLink("Delete", "Delete", new { id = item.breakoff.BreakOffGuid }, new { @class = "btn btn-danger btn-sm", role = "button" })
                                }
                                else
                                {
                                    <button id="Edit" class="btn btn-default btn-sm" disabled>Edit</button>
                                    <button id="Delete" class="btn btn-default btn-sm" disabled>Delete</button>
                                }
                            </td>
                        </tr>
                    }
                    @if (Model.Count() == 0)
                    {
                
                        <tr>
                            <td><em>There is no record.</em></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="pager">
                @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.AlwaysAddFirstPageNumber())
            </div>
        </div>
    </fieldset>
</div>
@Styles.Render("~/Content/BreakOff")
@Scripts.Render("~/bundles/BreakOff")