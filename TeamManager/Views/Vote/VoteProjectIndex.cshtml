@model IPagedList<TeamManager.DataProvider.VoteProject>
@{
    ViewBag.Title = "VoteProjectIndex";
}
<link href="~/Content/bootstrap/css/pager.css" rel="stylesheet" />

<div id="ov">
     <div class="navigate">@Html.ActionLink("View Current Vote Item", "Vote", null, new { @class = "btn btn-primary", role = "button" })</div>
    <fieldset>
        <legend>Vote Project Application  投票项目管理</legend>
        @if (ViewData["UserRole"].ToString() == "Project Manager" || ViewData["UserRole"].ToString() == "Team Leader")
        {
            <p> 
                @Html.ActionLink("Create New", "VoteProjectAdd", null, new { @class = "btn btn-primary", role = "button", @id="btnProjectAdd" })
            </p>
        }
        <div id="voteProject" class="table-responsive">
            <table id="VoteProjectTable" class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Name<br />投票项目名称</th>
                        <th>Term<br />项目届期</th>
                        <th>Status<br />项目状态</th>
                        <th>Vote Begin Time<br />投票开始时间</th>
                        <th>Vote End Time<br />投票结束时间</th>
                        <th>Action<br />操作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                               @string.Format("{0:yyyy/MM/dd}", item.TermFrom) - @string.Format("{0:yyyy/MM/dd}", item.TermTo)
                            </td>
                            <td>
                                @if (item.State == 0)
                                {
                                   @(new HtmlString("Normal"));
                                }
                                else if(item.State==1)
                                { 
                                    @(new HtmlString("Finished"));
                                }
                                else
                                {
                                    @(new HtmlString("Deleted"));
                                }
                            </td>
                            <td>
                                @string.Format("{0:yyyy/MM/dd HH:mm}", item.BeginTime)
                            </td>
                            <td>
                                @string.Format("{0:yyyy/MM/dd HH:mm}", item.EndTime)
                            </td>
                            <td>
                                @if (item.State == 0)
                                {
                                    if (ViewData["UserRole"].ToString() == "Project Manager" || ViewData["UserRole"].ToString() == "Team Leader")
                                    {           
                                        if (Convert.ToDateTime(item.EndTime) > DateTime.Now && Convert.ToDateTime(item.BeginTime) > DateTime.Now)
                                        { 
                                            @Html.ActionLink("Edit", "VoteProjectEdit", new { id = item.Id }, new { @class = "btn btn-success btn-sm", role = "button" })
                                            @Html.Raw("&nbsp;") 
                                            @Html.ActionLink("Delete", "VoteProjectDelete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm", role = "button" })
                                        }
                                        @Html.Raw("&nbsp;") 
                                        @Html.ActionLink("Item List", "ItemList", new { id = item.Id}, new { @class = "btn btn-success btn-sm", role = "button" })
                                        @Html.Raw("&nbsp;") 
                                    }
                                    //normal status and votetime is not beginning, then redirect to Vote Item List page, otherwise, Vote page
                                    if (Convert.ToDateTime(item.BeginTime) <= DateTime.Now && Convert.ToDateTime(item.EndTime) >= DateTime.Now)
                                    {    
                                        @Html.ActionLink("Vote", "Vote", new { pid=item.Id}, new { @class = "btn btn-success btn-sm", role = "button" })
                                    }
                                }
                                else if (item.State == 1)
                                {
                                    if (ViewData["UserRole"].ToString() == "Project Manager" || ViewData["UserRole"].ToString() == "Team Leader")
                                    {                             
                                        <button id="VoteProjectEdit" class="btn btn-default btn-sm" disabled>Edit</button> 
                                        <button id="VoteProjectDelete" class="btn btn-default btn-sm" disabled>Delete</button>
                                    }
                                    //finished, then redirect to Result
                                    @Html.ActionLink("Vote Result", "Result", new { pId = item.Id }, new { @class = "btn btn-success btn-sm", role = "button" })
                                }
                                else
                                {
                                    if (ViewData["UserRole"].ToString() == "Project Manager" || ViewData["UserRole"].ToString() == "Team Leader")
                                    {   
                                        <button id="btnVoteProjectEdit1" class="btn btn-default btn-sm" disabled>Edit</button> 
                                        <button id="btnVoteProjectDelete1" class="btn btn-default btn-sm" disabled>Delete</button>
                                    }
                                }
                            </td>
                        </tr>
                    }
                    @if (Model.Count() == 0)
                    {
                
                        <tr>
                            <td><em>There is no record.</em></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="pager">
                @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.AlwaysAddFirstPageNumber())
            </div>
        </div>
    </fieldset>
</div>
@Styles.Render("~/Content/Vote")
@Scripts.Render("~/bundles/Vote")
<style>
    .navigate {
        text-align:right
    }
</style>